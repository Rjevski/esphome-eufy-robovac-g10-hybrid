esphome:
  name: eufy-robovac-g10-hybrid
  # will be supported in an upcoming release
  friendly_name: Eufy Robovac G10 Hybrid

esp8266:
  board: esp01_1m

api:
  encryption:
    key: !secret robovac_encryption_key

ota:
  - platform: esphome
    password: !secret robovac_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

  ap:
    ssid: Eufy-Robovac Fallback Hotspot
    password: !secret robovac_fallback_ap_password

captive_portal:

# Tuya supports sending time to the application processor and the vacuum does use it (not sure for why though) so let's configure a time reference
time:
  - platform: homeassistant
    id: time_source

# UART will be used to talk to the application processor, so we need to disable any logging over it
logger:
  baud_rate: 0

# UART to talk to the application processor
uart:
  id: vacuum_uart
  rx_pin: GPIO3
  tx_pin: GPIO1
  baud_rate: 115200
  debug: null

# the TuyaMCU object
tuya:
  id: vacuum_tuya
  uart_id: vacuum_uart
  time_id: time_source

number:
  - platform: tuya
    name: Volume
    number_datapoint: 111
    min_value: 0
    max_value: 10
    step: 1
    entity_category: config
    device_class: volume
    icon: mdi:volume-high

sensor:
  - platform: tuya
    name: Battery
    sensor_datapoint: 104
    unit_of_measurement: "%"
    icon: mdi:battery
    device_class: battery
    state_class: measurement
    entity_category: diagnostic

  - platform: tuya
    name: Last clean time
    sensor_datapoint: 109
    unit_of_measurement: seconds
    icon: mdi:timer-sync
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

  - platform: tuya
    name: Last clean area
    sensor_datapoint: 110
    icon: mdi:map-marker
    entity_category: diagnostic

  - platform: tuya
    name: Total clean time
    sensor_datapoint: 119
    unit_of_measurement: seconds
    icon: mdi:timer-sync
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

  - platform: tuya
    name: Total clean area
    sensor_datapoint: 120
    icon: mdi:map-marker
    entity_category: diagnostic

  - platform: tuya
    name: Side brush time
    sensor_datapoint: 112
    unit_of_measurement: seconds
    icon: mdi:broom
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

  - platform: tuya
    name: Main brush time
    sensor_datapoint: 113
    unit_of_measurement: seconds
    icon: mdi:broom
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

  - platform: tuya
    name: Filter time
    sensor_datapoint: 114
    unit_of_measurement: seconds
    icon: mdi:air-filter
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

  - platform: tuya
    name: Sensor time
    sensor_datapoint: 127
    unit_of_measurement: seconds
    icon: mdi:leak
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

button:
  - platform: template
    name: Reset side brush time
    icon: mdi:broom
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(115, 0);

  - platform: template
    name: Reset main brush time
    icon: mdi:broom
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(115, 1);

  - platform: template
    name: Reset filter time
    icon: mdi:air-filter
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(115, 2);

  - platform: template
    name: Reset sensor time
    icon: mdi:leak
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(115, 3);

  - platform: template
    name: Start cleaning
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(5, 0);

  - platform: template
    name: Start spot cleaning
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(5, 2);

  - platform: template
    name: Pause
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(122, 1);

  - platform: template
    name: Resume
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_enum_datapoint_value(122, 2);

  - platform: template
    name: Return to dock
    entity_category: config
    on_press:
      - lambda: id(vacuum_tuya).force_set_boolean_datapoint_value(101, true);
select:
  - platform: tuya
    id: status_dp
    enum_datapoint: 15
    options:
      0: Running
      1: Idle
      2: Sleeping
      3: Charging
      4: Charged
      5: Docking
    on_value: &publish_state_sensor
      then:
        - text_sensor.template.publish:
            id: state_sensor
            state: !lambda 'return (id(pause_dp).state == "Paused" && id(status_dp).state == "Idle") ? "Paused" : id(status_dp).state;'

  - platform: tuya
    id: pause_dp
    enum_datapoint: 122
    options:
      1: Paused
      2: Resume
    on_value: *publish_state_sensor

  - platform: tuya
    name: Fan speed
    enum_datapoint: 102
    entity_category: config
    options:
      1: Standard
      2: Max

text_sensor:
  - platform: template
    name: State
    entity_category: diagnostic
    id: state_sensor

switch:
  - platform: tuya
    name: Locate
    icon: mdi:map-marker
    entity_category: config
    switch_datapoint: 103

  - platform: tuya
    name: Auto-return cleaning
    icon: mdi:restore
    entity_category: config
    switch_datapoint: 135
